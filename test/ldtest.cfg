SYMBOLS {
    __EXEHDR__: type = import;
    __STACKSIZE__: type=weak, value = $0800;
}
MEMORY {
    ZP:       file = "", start = $0000, size = $0100,      define = yes;
    HEADER:   file = %O, start = $0000, size = $000c;
    MAIN:     file = %O, define = yes, start = $0200, size = $FDF0 - __STACKSIZE__;

}
SEGMENTS {
    ZEROPAGE: load = ZP,       type = zp;
    EXEHDR:   load = HEADER,   type = ro;
    STARTUP:  load = MAIN,     type = ro;
    ONCE:     load = MAIN,     type = ro, optional = yes;
    CODE:     load = MAIN,     type = ro;
    RODATA:   load = MAIN,     type = ro,  optional = yes;
    DATA:     load = MAIN,     type = rw,  optional = yes;
    BSS:      load = MAIN,     type = bss, optional = yes, define = yes;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
